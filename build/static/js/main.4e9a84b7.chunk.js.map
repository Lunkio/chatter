{"version":3,"sources":["components/Topics.tsx","services/usersService.tsx","reducers/usersReducer.tsx","reducers/loginReducer.tsx","services/blogsService.tsx","reducers/blogsReducer.tsx","styles/styles.tsx","reducers/messageReducer.tsx","reducers/chatsReducer.tsx","services/topicsService.tsx","reducers/topicsReducer.tsx","services/loginService.tsx","components/LoginPage.tsx","components/Users.tsx","components/Message.tsx","components/Navbar.tsx","components/Home.tsx","components/Blogs.tsx","components/SingleBlog.tsx","components/SingleUser.tsx","App.tsx","store/store.tsx","styles/theme.tsx","index.tsx"],"names":["socket","getAll","a","axios","get","res","data","initialState","usersReducer","state","action","type","loginUser","user","dispatch","window","localStorage","setItem","JSON","stringify","loginReducer","token","setToken","newToken","getAllBlogs","addBlog","blog","post","editBlog","put","id","removeBlog","config","headers","Authorization","delete","blogsService","newBlog","editedBlog","blogsReducer","editedBlogId","map","filter","b","useStyles","makeStyles","theme","createStyles","primaryLight","color","palette","primary","light","primaryDark","dark","secondaryLight","secondary","secondaryDark","flex","display","textField","marginBottom","menuButton","padding","marginLeft","logoutButton","link","textDecoration","navBarText","fontSize","fontStyle","table","fontFamily","tableHead","backgroundColor","tableLink","fontWeight","singleBlog","marginTop","topicsContainer","removeBtn","topicsWindow","width","height","overflow","borderRight","chatWindow","topicManagement","justifyContent","addTopic","alignItems","topicInfo","chatFieldAndButton","textInput","chatUserColor","chatMessage","margin","chatMessageUser","flexDirection","textAlign","open","severity","undefined","text","setMessage","message","messageReducer","chatsReducer","Topics","classes","useDispatch","loggedInUser","useSelector","login","topics","chats","users","useState","newTopic","setNewTopic","newMessage","setNewMessage","topicHead","setTopicHead","chosenTopicId","setChosenTopicId","chosenTopic","setChosenTopic","toChatBoxEnd","useRef","useEffect","current","scrollIntoView","behavior","io","on","topic","removeBtnShow","topicAdderShow","visibility","user_id","chooseTopic","name","handleAddTopic","e","preventDefault","topicsService","addNewTopic","addedTopic","handleMessageSend","topic_id","addNewChatMessage","handleTopicRemoval","topicToRemove","find","t","removeTopic","topicSelected","isTopicChosen","chatStyle","chatUserStyle","Paper","elevation","className","Typography","variant","align","onSubmit","TextField","fullWidth","placeholder","size","value","onChange","target","IconButton","AddCircleRounded","style","u","username","topicAdder","Button","onClick","List","component","ListItem","selected","button","key","ListItemText","c","chat","Chip","label","marginRight","ref","disabled","endIcon","Icon","sendTopicToSocket","emit","getAllChats","getAllTopics","removeTopicAndChats","topicsReducer","credentials","LoginPage","setUsername","password","setPassword","handleLogin","event","loginService","console","log","Users","blogs","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","to","length","amountOfBlogs","Alert","props","Message","handleClose","_event","reason","Snackbar","autoHideDuration","onClose","Navbar","AppBar","position","Toolbar","Grid","container","justify","item","Link","removeItem","Home","Blogs","title","setTitle","author","setAuthor","url","setUrl","showAddBtn","setshowAddBtn","showCreate","setShowCreate","handleAddBlog","likes","comments","buttonShow","createShow","Container","maxWidth","userBlog","findBlogUser","SingleBlog","history","useHistory","useParams","comment","setComment","handleBlogRemove","push","handleComment","concat","addLike","Fragment","i","SingleUser","userBlogs","App","usersService","loggedUser","getItem","parse","fetch","exact","path","render","reducers","combineReducers","store","createStore","applyMiddleware","thunk","createMuiTheme","typography","join","textTransform","main","error","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4e9a84b7.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Icon, Button, TextField, IconButton, Paper, Typography, List, ListItem, ListItemText, Chip } from '@material-ui/core';\r\nimport { AddCircleRounded } from '@material-ui/icons';\r\nimport { useStyles } from '../styles/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setMessage } from '../reducers/messageReducer';\r\nimport { LoggedUserData, Topic, ChatMessage, TopicWithoutId, ChatMessageWithoutId, User, Visibility } from '../types';\r\nimport { AppState } from '../store/store';\r\nimport { addTopic, removeTopic } from '../reducers/topicsReducer';\r\nimport { addChatMessage } from '../reducers/chatsReducer';\r\nimport topicsService from '../services/topicsService';\r\nimport io from 'socket.io-client';\r\n\r\nexport let socket: any;\r\n\r\nconst Topics = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const loggedInUser: LoggedUserData = useSelector((state: AppState) => state.login);\r\n    const topics: Topic[] = useSelector((state: AppState) => state.topics);\r\n    const chats: ChatMessage[] = useSelector((state: AppState) => state.chats);\r\n    const users: User[] = useSelector((state: AppState) => state.users);\r\n    const [newTopic, setNewTopic] = useState<string>('');\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [topicHead, setTopicHead] = useState<string>('Choose a topic');\r\n    const [chosenTopicId, setChosenTopicId] = useState<string>('');\r\n    const [chosenTopic, setChosenTopic] = useState<Topic | undefined>(undefined);\r\n    const toChatBoxEnd = useRef<HTMLDivElement>(null);\r\n\r\n    const scrollToBottom = () => {\r\n        if (toChatBoxEnd.current) {\r\n            toChatBoxEnd.current.scrollIntoView({ behavior: 'smooth' });\r\n        };\r\n    };\r\n\r\n    useEffect(scrollToBottom, [chats, chosenTopic]);\r\n\r\n    if (!socket) {\r\n        socket = io('https://chatter-blog-app.herokuapp.com/');\r\n        //socket = io(':3001');\r\n        socket.on('chat message', (message: ChatMessage) => {\r\n            dispatch(addChatMessage(message));\r\n        });\r\n        socket.on('topic', (topic: Topic) => {\r\n            dispatch(addTopic(topic));\r\n        });\r\n    };\r\n\r\n    let removeBtnShow = { display: 'none' };\r\n    \r\n    let topicAdderShow: Visibility = {visibility: 'hidden'};\r\n\r\n    if (chosenTopic) {\r\n        removeBtnShow = { display: chosenTopic.user_id === loggedInUser.id ? '' : 'none' };\r\n        topicAdderShow = { visibility: 'visible' };\r\n    };\r\n\r\n    const chooseTopic = (topic: Topic) => {\r\n        setTopicHead(topic.name);\r\n        setChosenTopicId(topic.id);\r\n        setChosenTopic(topic);\r\n    };\r\n\r\n    const handleAddTopic = async (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (newTopic === '') {\r\n                dispatch(setMessage({ open: true, severity: 'warning', text: 'Topic cannot be empty' }));\r\n                return;\r\n            };\r\n            const topic: TopicWithoutId = {\r\n                name: newTopic,\r\n                user_id: loggedInUser.id\r\n            };\r\n            const addedTopic: Topic = await topicsService.addNewTopic(topic);\r\n            dispatch(setMessage({ open: true, severity: 'success', text: 'New topic was added' }));\r\n            setNewTopic('');\r\n            chooseTopic(addedTopic);\r\n        } catch (e) {\r\n            dispatch(setMessage({ open: true, severity: 'error', text: 'Something went wrong, please try again' }));\r\n        } \r\n    };\r\n\r\n    const handleMessageSend = async (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (newMessage === '') {\r\n                return;\r\n            }\r\n            const chatMessage: ChatMessageWithoutId = {\r\n                message: newMessage,\r\n                user_id: loggedInUser.id,\r\n                topic_id: chosenTopicId\r\n            };\r\n            await topicsService.addNewChatMessage(chatMessage);\r\n            setNewMessage('');\r\n        } catch (e) {\r\n            dispatch(setMessage({ open: true, severity: 'error', text: 'Something went wrong, please try again' }));\r\n        }\r\n    };\r\n\r\n    const handleTopicRemoval = async (topics: Topic[]) => {\r\n        try {\r\n            const topicToRemove: Topic | undefined = topics.find(t => t.id === chosenTopicId);\r\n            if (!topicToRemove) {\r\n                return;\r\n            }\r\n            topicsService.setToken(loggedInUser.token);\r\n            await dispatch(removeTopic(topicToRemove.id));\r\n            dispatch(setMessage({ open: true, severity: 'success', text: 'Topic removed succesfully' }));\r\n            setTopicHead('Choose a topic');\r\n            setChosenTopicId('');\r\n            setChosenTopic(undefined);\r\n        } catch (e) {\r\n            dispatch(setMessage({ open: true, severity: 'error', text: 'Something went wrong, please try again' }));\r\n        }\r\n    }\r\n\r\n    const topicAdder = () => {\r\n        if (chosenTopic) {\r\n            const user: User | undefined = users.find(u => u.id === chosenTopic.user_id);\r\n            if (user) {\r\n                return user.username\r\n            }\r\n        }\r\n    };\r\n    \r\n    const topicSelected = (topic: Topic): boolean => {\r\n        if (chosenTopic) {\r\n            return topic.id === chosenTopic.id;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const isTopicChosen = (): boolean => {\r\n        return chosenTopicId === '';\r\n    };\r\n\r\n    const chatStyle = (user: User) => { \r\n        return user.id === loggedInUser.id ? classes.chatMessageUser : classes.chatMessage;\r\n    };\r\n\r\n    const chatUserStyle = (user: User) => {\r\n        return user.id === loggedInUser.id ? 'primary' : 'secondary'\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.topicsContainer}>\r\n            <Typography variant='h4' align='center'>\r\n                {topicHead}\r\n            </Typography><hr />\r\n            <form onSubmit={handleAddTopic} className={classes.topicManagement}>\r\n                <div className={classes.addTopic}>\r\n                    <TextField\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        placeholder='Add new topic'\r\n                        type='text'\r\n                        size='small'\r\n                        value={newTopic}\r\n                        onChange={e => setNewTopic(e.target.value)}\r\n                    />\r\n                    <IconButton type='submit' color='primary'>\r\n                        <AddCircleRounded fontSize='inherit'/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.topicInfo}>\r\n                    <div style={topicAdderShow}>\r\n                        <p style={{marginLeft: '1rem', fontSize: '0.8rem'}}>added by: {topicAdder()}</p>\r\n                    </div>\r\n                    <div style={removeBtnShow}>\r\n                        <Button\r\n                            className={classes.removeBtn}\r\n                            size='small'\r\n                            onClick={() => handleTopicRemoval(topics)}\r\n                        >\r\n                            Remove Topic\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className={classes.flex}>\r\n                <div className={classes.topicsWindow}>\r\n                    <List component=\"nav\">\r\n                        {topics.map(topic =>\r\n                            <ListItem selected={topicSelected(topic)} button key={topic.id} onClick={() => chooseTopic(topic)}>\r\n                                <ListItemText primary={topic.name} />\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                </div>\r\n                <div className={classes.chatWindow}>\r\n                    {chats.filter(c => c.topic_id === chosenTopicId).map(chat => {\r\n                        const user: User | undefined = users.find(u => u.id === chat.user_id);\r\n                        if (user) {\r\n                            return (\r\n                                <div className={chatStyle(user)} key={chat.id}>\r\n                                    <Chip\r\n                                        color={chatUserStyle(user)}\r\n                                        label={user.username}\r\n                                    />\r\n                                    <span style={{marginLeft: '0.3rem', marginRight: '0.3rem'}}>{chat.message}</span>\r\n                                </div>\r\n                            )\r\n                        } else { return <div key={chat.id}>Error</div> }\r\n                    })}\r\n                    <div ref={toChatBoxEnd} />\r\n                </div>\r\n            </div>\r\n            <form onSubmit={handleMessageSend} className={classes.chatFieldAndButton}>\r\n                <div className={classes.textInput}>\r\n                    <TextField\r\n                        fullWidth\r\n                        disabled={isTopicChosen()}\r\n                        placeholder='Type a message'\r\n                        type='text'\r\n                        size='small'\r\n                        value={newMessage}\r\n                        onChange={e => setNewMessage(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        disabled={isTopicChosen()}\r\n                        endIcon={<Icon>send</Icon>}\r\n                    >\r\n                        Send\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nexport default Topics;","import axios from 'axios';\r\n\r\nconst url = '/api/users';\r\n\r\nconst getAll = async () => {\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n};\r\n\r\nexport default { getAll };","import usersService from '../services/usersService';\r\nimport { User } from '../types';\r\nimport { InitUserActionTypes, AppActions } from '../store/typesStore';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst initialState: User[] = [];\r\n\r\nconst usersReducer = (state = initialState, action: InitUserActionTypes): User[] => {\r\n    switch (action.type) {\r\n        case 'INIT_USERS':\r\n            return action.data;\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport const initUsers = () => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        const users: User[] = await usersService.getAll();\r\n        dispatch({\r\n            type: 'INIT_USERS',\r\n            data: users\r\n        })\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import { LoggedUser } from '../types';\r\nimport { AppActions, LogInOutActionTypes } from '../store/typesStore';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst inititalState: LoggedUser = null;\r\n\r\nconst loginReducer = (state = inititalState, action: LogInOutActionTypes): LoggedUser=> {\r\n    switch (action.type) {\r\n        case 'LOGIN_USER':\r\n            return action.data;\r\n        case 'LOGOUT_USER':\r\n            return null;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const loginUser = (user: LoggedUser) => {\r\n    return (dispatch: Dispatch<AppActions>) => {\r\n        window.localStorage.setItem(\r\n            'loggedUser', JSON.stringify(user)\r\n        );\r\n        dispatch({\r\n            type: 'LOGIN_USER',\r\n            data: user\r\n        });\r\n    }\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    return (dispatch: Dispatch<AppActions>) => {\r\n        window.localStorage.removeItem('loggedUser');\r\n        dispatch({\r\n            type: 'LOGOUT_USER'\r\n        });\r\n    }\r\n};\r\n\r\nexport const initLoginUser = () => {\r\n    return (dispatch: Dispatch<AppActions>) => {\r\n        const loggedUser = window.localStorage.getItem('loggedUser');\r\n        if (loggedUser) {\r\n            const user = JSON.parse(loggedUser);\r\n            dispatch({\r\n                type: 'LOGIN_USER',\r\n                data: user\r\n            });\r\n        };\r\n    }\r\n};\r\n\r\nexport default loginReducer;","import axios from 'axios';\r\nimport { Blog, Token } from '../types';\r\n\r\nconst url = '/api/blogs';\r\n\r\nlet token: Token = null;\r\n\r\nconst setToken = (newToken: Token) => {\r\n    token = `bearer ${newToken}`\r\n};\r\n\r\nconst getAllBlogs = async () => {\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n};\r\n\r\nconst addBlog = async (blog: Blog) => {\r\n    const res = await axios.post(url, blog);\r\n    return res.data;\r\n}\r\n\r\nconst editBlog = async (blog: Blog) => {\r\n    const res = await axios.put(`${url}/${blog.id}`, blog);\r\n    return res.data;\r\n}\r\n\r\nconst removeBlog = async (blog: Blog) => {\r\n    const config = { headers: { Authorization: token } };\r\n    const res = await axios.delete(`${url}/${blog.id}`, config);\r\n    return res.data;\r\n}\r\n\r\nexport default { setToken, getAllBlogs, addBlog, editBlog, removeBlog };","import blogsService from '../services/blogsService';\r\nimport { Dispatch } from 'redux';\r\nimport { Blog } from '../types';\r\nimport { AppActions, BlogActionTypes } from '../store/typesStore';\r\n\r\nconst initialState: Blog[] = [];\r\n\r\nconst blogsReducer = (state = initialState, action: BlogActionTypes): Blog[] => {\r\n    switch (action.type) {\r\n        case 'INIT_BLOGS':\r\n            return action.data;\r\n        case 'ADD_BLOG':\r\n            return [...state, action.data];\r\n        case 'EDIT_BLOG':\r\n            const editedBlog = action.data;\r\n            const editedBlogId = action.data.id;\r\n            return state.map(blog => blog.id !== editedBlogId ? blog : editedBlog);\r\n        case 'REMOVE_BLOG':\r\n            return state.filter(b => b.id !== action.data.id);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const initBlogs = () => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        const blogs: Blog[] = await blogsService.getAllBlogs();\r\n        dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs\r\n        });\r\n    }\r\n};\r\n\r\nexport const addBlog = (blog: Blog) => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        const newBlog: Blog = await blogsService.addBlog(blog);\r\n        dispatch({\r\n            type: 'ADD_BLOG',\r\n            data: newBlog\r\n        });\r\n    }\r\n};\r\n\r\nexport const editBlog = (blog: Blog) => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        const editedBlog: Blog = await blogsService.editBlog(blog);\r\n        dispatch({\r\n            type: 'EDIT_BLOG',\r\n            data: editedBlog\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeBlog = (blog: Blog) => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        await blogsService.removeBlog(blog);\r\n        dispatch({\r\n            type: 'REMOVE_BLOG',\r\n            data: blog\r\n        });\r\n    }\r\n};\r\n\r\nexport default blogsReducer;","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        primaryLight: {\r\n            color: theme.palette.primary.light\r\n        },\r\n        primaryDark: {\r\n            color: theme.palette.primary.dark\r\n        },\r\n        secondaryLight: {\r\n            color: theme.palette.secondary.light\r\n        },\r\n        secondaryDark: {\r\n            color: theme.palette.secondary.dark\r\n        },\r\n        flex: {\r\n            display: 'flex',\r\n        },\r\n        textField: {\r\n            marginBottom: '1rem'\r\n        },\r\n        menuButton: {\r\n            padding: '1.23rem',\r\n            color: theme.palette.primary.light,\r\n            marginLeft: '0.5rem',\r\n        },\r\n        logoutButton: {\r\n            padding: '1.23rem',\r\n            color: theme.palette.primary.light,\r\n            marginLeft: '0.5rem',\r\n        },\r\n        link: {\r\n            textDecoration: 'none',\r\n            color: 'white'\r\n        },\r\n        navBarText: {\r\n            fontSize: '0.7rem',\r\n            fontStyle: 'italic',\r\n            color: theme.palette.secondary.light,\r\n        },\r\n        table: {\r\n            fontFamily: 'Solway',\r\n        },\r\n        tableHead: {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        tableLink: {\r\n            textDecoration: 'none',\r\n            fontWeight: 'bold',\r\n            color: 'primary'\r\n        },\r\n        singleBlog: {\r\n            marginTop: '1rem',\r\n            marginBottom: '1rem',\r\n            padding: '0.5rem',\r\n        },\r\n        topicsContainer: {\r\n            padding: '2rem'\r\n        },\r\n        removeBtn: {\r\n            color: '#D32F2F'\r\n        },\r\n        topicsWindow: {\r\n            width: '30%',\r\n            height: '20rem',\r\n            overflow: 'auto',\r\n            borderRight: '1px solid grey'\r\n        },\r\n        chatWindow: {\r\n            width: '70%',\r\n            height: '20rem',\r\n            overflow: 'auto'\r\n        },\r\n        topicManagement: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        },\r\n        addTopic: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '30%'\r\n        },\r\n        topicInfo: {\r\n            width: '70%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center'\r\n        },\r\n        chatFieldAndButton: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-around',\r\n            marginTop: '1rem'\r\n        },\r\n        textInput: {\r\n            width: '80%',\r\n        },\r\n        chatUserColor: {\r\n            color: theme.palette.primary.light\r\n        },\r\n        chatMessage: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            margin: '0.5rem',\r\n            marginBottom: '1rem',\r\n        },\r\n        chatMessageUser: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            margin: '0.5rem',\r\n            marginBottom: '1rem',\r\n            flexDirection: 'row-reverse',\r\n            textAlign: 'right',\r\n        }\r\n    }),\r\n);","import { Dispatch } from \"redux\";\r\nimport { AppActions, MessageActionTypes } from \"../store/typesStore\";\r\nimport { Message } from \"../types\";\r\n\r\nconst initialState: Message = { \r\n    open: false,\r\n    severity: undefined,\r\n    text: '' \r\n};\r\n\r\nconst messageReducer = (state = initialState, action: MessageActionTypes): Message => {\r\n    switch (action.type) {\r\n        case 'SET_MESSAGE':\r\n            return action.data;\r\n        case 'CLOSE_MESSAGE':\r\n            return action.data;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const setMessage = (message: Message) => {\r\n    return (dispatch: Dispatch<AppActions>) => {\r\n        dispatch({\r\n            type: 'SET_MESSAGE',\r\n            data: message\r\n        });\r\n    }\r\n};\r\n\r\nexport const closeMessage = () => {\r\n    return (dispatch: Dispatch<AppActions>) => {\r\n        const message = { open: false, severity: undefined, text: '' };\r\n        dispatch({\r\n            type: 'CLOSE_MESSAGE',\r\n            data: message\r\n        });\r\n    }\r\n};\r\n\r\nexport default messageReducer;","import { Dispatch } from 'redux';\r\nimport { AppActions, ChatActionTypes } from '../store/typesStore';\r\nimport { ChatMessage } from '../types';\r\nimport topicsService from '../services/topicsService';\r\n\r\nconst initialState: ChatMessage[] = [];\r\n\r\nconst chatsReducer = (state = initialState, action: ChatActionTypes): ChatMessage[] => {\r\n    switch (action.type) {\r\n        case 'INIT_CHATS':\r\n            return action.data;\r\n        case 'ADD_CHAT':\r\n            return [...state, action.data];\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const initChats = () => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        const chats: ChatMessage[] = await topicsService.getAllChats();\r\n        dispatch({\r\n            type: 'INIT_CHATS',\r\n            data: chats\r\n        });\r\n    }\r\n};\r\n\r\nexport const addChatMessage = (chatMessage: ChatMessage) => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        //const newChatMessage: ChatMessage = await topicsService.addNewChatMessage(chat);\r\n        dispatch({\r\n            type: 'ADD_CHAT',\r\n            data: chatMessage\r\n        });\r\n    }\r\n};\r\n\r\nexport default chatsReducer;","import axios from 'axios';\r\nimport { Token, ChatMessageWithoutId, TopicWithoutId, ChatMessage, Topic } from '../types';\r\nimport { socket } from '../components/Topics';\r\n\r\nconst sendChatMessageToSocket = (message: ChatMessage) => {\r\n    socket.emit('chat message', message);\r\n};\r\n\r\nconst sendTopicToSocket = (topic: Topic) => {\r\n    socket.emit('topic', topic);\r\n};\r\n\r\nconst url = '/api/topics';\r\n\r\nlet token: Token = null;\r\n\r\nconst setToken = (newToken: Token) => {\r\n    token = `bearer ${newToken}`\r\n};\r\n\r\nconst getAllChats = async () => {\r\n    const res = await axios.get(`${url}/chats`);\r\n    return res.data;\r\n};\r\n\r\nconst addNewChatMessage = async (chatMessage: ChatMessageWithoutId) => {\r\n    const res = await axios.post(`${url}/chats`, chatMessage);\r\n    sendChatMessageToSocket(res.data);\r\n};\r\n\r\nconst getAllTopics = async () => {\r\n    const res = await axios.get(url);\r\n    return res.data;\r\n};\r\n\r\nconst addNewTopic = async (topic: TopicWithoutId) => {\r\n    const res = await axios.post(url, topic);\r\n    sendTopicToSocket(res.data);\r\n    return res.data;\r\n};\r\n\r\nconst removeTopicAndChats = async (id: string) => {\r\n    const config = { headers: { Authorization: token } };\r\n    await axios.delete(`${url}/${id}`, config);\r\n};\r\n\r\nexport default { setToken, getAllChats, addNewChatMessage, getAllTopics, addNewTopic, removeTopicAndChats };","import { Dispatch } from 'redux';\r\nimport { AppActions, TopicActionTypes } from '../store/typesStore';\r\nimport { Topic } from '../types';\r\nimport topicsService from '../services/topicsService';\r\n\r\nconst initialState: Topic[] = [];\r\n\r\nconst topicsReducer = (state = initialState, action: TopicActionTypes): Topic[] => {\r\n    switch (action.type) {\r\n        case 'INIT_TOPICS':\r\n            return action.data;\r\n        case 'NEW_TOPIC':\r\n            return [...state, action.data];\r\n        case 'REMOVE_TOPIC':\r\n            return state.filter(t => t.id !== action.data);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport const initTopics = () => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        const topics: Topic[] = await topicsService.getAllTopics();\r\n        dispatch({\r\n            type: 'INIT_TOPICS',\r\n            data: topics\r\n        });\r\n    }\r\n};\r\n\r\nexport const addTopic = (topic: Topic) => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        //const newTopic: Topic = await topicsService.addNewTopic(topic);\r\n        dispatch({\r\n            type: 'NEW_TOPIC',\r\n            data: topic\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeTopic = (id: string) => {\r\n    return async (dispatch: Dispatch<AppActions>) => {\r\n        await topicsService.removeTopicAndChats(id);\r\n        dispatch({\r\n            type: 'REMOVE_TOPIC',\r\n            data: id\r\n        });\r\n    }\r\n};\r\n\r\nexport default topicsReducer;","import axios from 'axios';\r\nimport { LoginData } from '../types';\r\n\r\nconst login = async (credentials: LoginData) => {\r\n    const res = await axios.post('/api/login', credentials);\r\n    return res.data;\r\n};\r\n\r\nexport default { login };","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport loginService from '../services/loginService';\r\nimport { LoggedUser } from '../types';\r\nimport { loginUser } from '../reducers/loginReducer';\r\nimport { setMessage } from '../reducers/messageReducer';\r\nimport { useStyles } from '../styles/styles';\r\nimport blogsService from '../services/blogsService';\r\nimport topicsService from '../services/topicsService';\r\n\r\nconst LoginPage = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [username, setUsername] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n\r\n    const handleLogin = async (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        try {\r\n            const user: LoggedUser = await loginService.login({ username, password });\r\n            if (user) { \r\n                blogsService.setToken(user.token);\r\n                topicsService.setToken(user.token);\r\n            };\r\n            setUsername('');\r\n            setPassword('');\r\n            dispatch(setMessage({ open: true, severity: 'success', text: `Welcome ${user?.name}` }));\r\n            dispatch(loginUser(user));\r\n        } catch (e) {\r\n            dispatch(setMessage({ open: true, severity: 'error', text: 'Wrong username or password' }));\r\n            console.log('error', e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Log in to application</h1>\r\n            </div>\r\n            <form onSubmit={handleLogin}>\r\n                <TextField\r\n                    className={classes.textField}\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    type='text'\r\n                    label='Username'\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    size='small'\r\n                />\r\n                <TextField \r\n                    className={classes.textField}\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    type='password'\r\n                    label='Password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    size='small'\r\n                />\r\n                <Button\r\n                    type='submit'\r\n                    variant='contained'\r\n                    color='primary'\r\n                >\r\n                    Log in\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Paper } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { User, Blog } from '../types';\r\nimport { AppState } from '../store/store';\r\nimport { useStyles } from '../styles/styles';\r\n\r\nconst Users = () => {\r\n    const classes = useStyles();\r\n    const users: User[] = useSelector((state: AppState) => state.users);\r\n    const blogs: Blog[] = useSelector((state: AppState) => state.blogs);\r\n\r\n    const amountOfBlogs = (user: User): number => {\r\n        const userBlogs: Blog[] = blogs.filter(b => b.user_id === user.id);\r\n        return userBlogs.length;\r\n    };\r\n\r\n    return (\r\n        <div style={{'marginTop': '2rem'}}>\r\n            <TableContainer component={Paper} className={classes.table}>\r\n                <Table>\r\n                    <TableHead className={classes.tableHead}>\r\n                        <TableRow>\r\n                            <TableCell>Users</TableCell>\r\n                            <TableCell>Topics created</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {users.map(user =>\r\n                            <TableRow key={user.id}>\r\n                                <TableCell>\r\n                                    <Link className={classes.tableLink} to={`/users/${user.id}`}>{user.username}</Link>\r\n                                </TableCell>\r\n                                <TableCell>{amountOfBlogs(user)}</TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { AppState } from '../store/store';\r\nimport { closeMessage } from '../reducers/messageReducer';\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nconst Message = () => {\r\n    const dispatch = useDispatch();\r\n    const message = useSelector((state: AppState) => state.message);\r\n\r\n    const handleClose = (_event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') { return };\r\n        dispatch(closeMessage());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar open={message.open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={message.severity}>\r\n                    {message.text}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from '../styles/styles';\r\nimport { AppBar, Toolbar, Button, Grid } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../reducers/loginReducer';\r\nimport { AppState } from '../store/store';\r\nimport { LoggedUserData } from '../types';\r\n\r\nconst Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const loggedInUser: LoggedUserData = useSelector((state: AppState) => state.login);\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position='fixed' >\r\n                <Toolbar>\r\n                    <Grid container justify='space-between'>\r\n                        <Grid item>\r\n                            <Button component={Link} to='/' className={classes.menuButton}>\r\n                                Home\r\n                            </Button>\r\n                            <Button component={Link} to='/topics' className={classes.menuButton}>\r\n                                Topics\r\n                            </Button>\r\n                            <Button component={Link} to='/blogs' className={classes.menuButton}>\r\n                                Blogs  \r\n                            </Button>\r\n                            <Button component={Link} to='/users' className={classes.menuButton}>\r\n                                Users\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <span className={classes.navBarText}>Logged in as {loggedInUser.username}</span>\r\n                            <Button \r\n                                onClick={() => dispatch(logoutUser())}\r\n                                className={classes.logoutButton}\r\n                            >\r\n                                Logout\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Welcome to Chatter!</h1>\r\n                <p>\r\n                    Here you can add your own blogs,\r\n                    start topics and discussions,\r\n                    or read other people's topics and blog posts.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Blog, User, LoggedUserData } from '../types';\r\nimport { AppState } from '../store/store';\r\nimport { Container, TextField, Grid, Button, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Paper } from '@material-ui/core';\r\nimport { useStyles } from '../styles/styles';\r\nimport { addBlog } from '../reducers/blogsReducer';\r\nimport { setMessage } from '../reducers/messageReducer';\r\n\r\nconst Blogs = () =>{\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const blogs: Blog[] = useSelector((state: AppState) => state.blogs);\r\n    const users: User[] = useSelector((state: AppState) => state.users);\r\n    const user: LoggedUserData = useSelector((state: AppState) => state.login);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [author, setAuthor] = useState<string>('');\r\n    const [url, setUrl] = useState<string>('');\r\n    const [showAddBtn, setshowAddBtn] = useState<boolean>(true);\r\n    const [showCreate, setShowCreate] = useState<boolean>(false);\r\n\r\n    const findBlogUser = (id: string | undefined): string | undefined => {\r\n        const userBlog: User | undefined = users.find(u => u.id === id);\r\n        return userBlog?.username;\r\n    }\r\n\r\n    const handleAddBlog = async (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (title === '' || author === '') {\r\n                dispatch(setMessage({ open: true, severity: 'warning', text: 'Blog needs both author and title details' }));\r\n                return;\r\n            };\r\n            const blog: Blog = {\r\n                title,\r\n                author,\r\n                url,\r\n                likes: 0,\r\n                comments: [],\r\n                user_id: user.id\r\n            };\r\n            await dispatch(addBlog(blog));\r\n            dispatch(setMessage({ open: true, severity: 'success', text: 'Blog added succesfully!' }));\r\n            setTitle('');\r\n            setAuthor('');\r\n            setUrl('');\r\n        } catch (e) {\r\n            console.log('error', e);\r\n            dispatch(setMessage({ open: true, severity: 'error', text: 'Something went wrong, please try again' }));\r\n        }\r\n    };\r\n\r\n    const buttonShow = { display: showAddBtn ? '' : 'none', 'marginTop': '2rem' };\r\n    const createShow = { display: showCreate ? '' : 'none', 'marginTop': '6rem' };\r\n\r\n    const open = () => {\r\n        setshowAddBtn(false);\r\n        setShowCreate(true);\r\n    };\r\n\r\n    const close = () => {\r\n        setshowAddBtn(true);\r\n        setShowCreate(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container maxWidth='md' style={createShow}>\r\n                <div>\r\n                    <h2>Create a new blog</h2>\r\n                </div>\r\n                <form onSubmit={handleAddBlog}>\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        type='text'\r\n                        label='Title'\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                        size='small'\r\n                    />\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        type='text'\r\n                        label='Author'\r\n                        value={author}\r\n                        onChange={e => setAuthor(e.target.value)}\r\n                        size='small'\r\n                    />\r\n                    <TextField\r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        variant='outlined'\r\n                        type='text'\r\n                        label='Url'\r\n                        value={url}\r\n                        onChange={e => setUrl(e.target.value)}\r\n                        size='small'\r\n                    />\r\n                    <Grid container justify='space-between'>\r\n                        <Grid item>\r\n                            <Button type='submit' variant='contained' color='primary'>\r\n                                Add new blog\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Button variant='outlined' className={classes.removeBtn} onClick={close}>\r\n                                Close\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Container>\r\n            {blogs.length === 0 &&\r\n                <h2>There are currently no blogs added...</h2>\r\n            }\r\n            {blogs.length > 0 &&\r\n                <TableContainer component={Paper} className={classes.table} style={{'marginTop': '2rem'}}>\r\n                    <Table>\r\n                        <TableHead className={classes.tableHead}>\r\n                            <TableRow>\r\n                                <TableCell>Title</TableCell>\r\n                                <TableCell>Author</TableCell>\r\n                                <TableCell>Added by</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {blogs.map(blog =>\r\n                                <TableRow key={blog.id}>\r\n                                    <TableCell>\r\n                                        <Link className={classes.tableLink} to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n                                    </TableCell>\r\n                                    <TableCell>{blog.author}</TableCell>\r\n                                    <TableCell>{findBlogUser(blog.user_id)}</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            }\r\n            <div style={buttonShow}>\r\n                <Button variant='contained' color='primary' onClick={open}>\r\n                    Create new blog\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Blogs;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Blog, User, LoggedUserData } from '../types';\r\nimport { AppState } from '../store/store';\r\nimport { Button, Paper, Grid, TextField } from '@material-ui/core';\r\nimport { removeBlog, editBlog } from '../reducers/blogsReducer';\r\nimport { setMessage } from '../reducers/messageReducer';\r\nimport { useStyles } from '../styles/styles';\r\nimport blogsService from '../services/blogsService';\r\n\r\nconst SingleBlog = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id }  = useParams<{ id: string }>();\r\n    const blogs: Blog[] = useSelector((state: AppState) => state.blogs);\r\n    const users: User[] = useSelector((state: AppState) => state.users);\r\n    const loggedInUser: LoggedUserData = useSelector((state: AppState) => state.login);\r\n    const [comment, setComment] = useState<string>('');\r\n\r\n    const blog: Blog | undefined = blogs.find(b => b.id === id);\r\n    if (!blog) { \r\n        return <div><h2>Blog was not found</h2></div>\r\n    };\r\n\r\n    let username: string | undefined = undefined;\r\n    const user: User | undefined = users.find(u => u.id === blog.user_id);\r\n    if (user) {\r\n        username = user.username;\r\n    };\r\n\r\n    const handleBlogRemove = async (blog: Blog) => {\r\n        try {\r\n            blogsService.setToken(loggedInUser.token);\r\n            await dispatch(removeBlog(blog));\r\n            dispatch(setMessage({ open: true, severity: 'info', text: 'Blog was removed' }));\r\n            history.push('/blogs');\r\n        } catch (e) {\r\n            dispatch(setMessage({ open: true, severity: 'error', text: 'Something went wrong, please try again' }));\r\n        }\r\n    };\r\n\r\n    const handleComment = async (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        if (comment === '') {\r\n            dispatch(setMessage({ open: true, severity: 'warning', text: 'Comment cannot be empty' }));\r\n            return;\r\n        };\r\n        try {\r\n            blog.comments = blog.comments.concat(comment);\r\n            await dispatch(editBlog(blog));\r\n            setComment('');\r\n        } catch (e) {\r\n            dispatch(setMessage({ open: true, severity: 'warning', text: 'Something went wrong, please try again' }));\r\n        };\r\n    };\r\n\r\n    const addLike = async (blog: Blog) => {\r\n        try {\r\n            blog.likes = blog.likes +1;\r\n            await dispatch(editBlog(blog));\r\n        } catch (e) {\r\n            dispatch(setMessage({ open: true, severity: 'warning', text: 'Something went wrong, please try again' }));\r\n        };\r\n    };\r\n\r\n    const removeBtnShow = { display: loggedInUser.id === blog.user_id ? '' : 'none' };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container justify='space-between'>\r\n                <Grid item>\r\n                    <Button \r\n                        color='default'\r\n                        variant='outlined'\r\n                        onClick={() => history.push('/')}\r\n                    >\r\n                        Go Back\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item style={removeBtnShow}>\r\n                    <Button\r\n                        className={classes.removeBtn}\r\n                        variant='outlined'\r\n                        onClick={() => handleBlogRemove(blog)}\r\n                    >\r\n                        Remove blog\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <div>\r\n                <Paper elevation={3} className={classes.singleBlog}>\r\n                    <h2><span style={{'fontSize': '0.9rem'}}>title: </span>{blog.title}</h2>\r\n                    <h2><span style={{'fontSize': '0.9rem'}}>author: </span>{blog.author}</h2>\r\n                    <p><i>{blog.url}</i></p>\r\n                    <Grid container justify='space-between'>\r\n                        <Grid item>\r\n                            <p>Comments: {blog.comments.length}</p>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <p>Likes: <span>{blog.likes}</span></p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                <Grid container justify='space-between' style={{'marginTop': '-0.5rem'}}>\r\n                    <Grid item style={{'marginTop': '-1.5rem'}}>\r\n                        <h6>added by: <span>{username}</span></h6>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={() => addLike(blog)}\r\n                        >\r\n                            Like\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                    <form onSubmit={handleComment}>\r\n                        <TextField\r\n                            className={classes.textField}\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            size='small'\r\n                            label='Write a comment'\r\n                            type='text'\r\n                            value={comment}\r\n                            onChange={e => setComment(e.target.value)}\r\n                        />\r\n                        <Button\r\n                            type='submit'\r\n                            variant='outlined'\r\n                            color='primary'\r\n                        >\r\n                            Add Comment\r\n                        </Button>\r\n                    </form>\r\n                    <ul>\r\n                        {blog.comments.map((c,i) =>\r\n                            <li key={i}>{c}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default SingleBlog;","import React from 'react';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport { User, Blog } from '../types';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../store/store';\r\nimport { Button } from '@material-ui/core';\r\nimport { useStyles } from '../styles/styles';\r\n\r\nconst SingleUser = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const users: User[] = useSelector((state: AppState) => state.users);\r\n    const blogs: Blog[] = useSelector((state: AppState) => state.blogs);\r\n\r\n    const user: User | undefined = users.find(u => u.id === id);\r\n    if (!user) { \r\n        return <div><h2>User was not found</h2></div>\r\n    };\r\n    const userBlogs: Blog[] = blogs.filter(b => b.user_id === user.id);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button\r\n                    color='default'\r\n                    variant='outlined'\r\n                    onClick={() => history.push('/users')}\r\n                >\r\n                    Go Back\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <h1>{user.username}</h1>\r\n                <h4>Added blogs:</h4>\r\n                {userBlogs.length === 0 &&\r\n                    <p><i>No added blogs...</i></p>\r\n                }\r\n                {userBlogs.length > 0 &&\r\n                    <ul>\r\n                        {userBlogs.map(blog =>\r\n                            <li key={blog.id}>\r\n                                <Link className={classes.tableLink} to={`/blogs/${blog.id}`}>\r\n                                    {blog.title}\r\n                                </Link>\r\n                            </li>    \r\n                        )}\r\n                    </ul>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SingleUser;","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initUsers } from './reducers/usersReducer';\r\nimport { initLoginUser } from './reducers/loginReducer';\r\nimport { initBlogs } from './reducers/blogsReducer';\r\nimport { initTopics } from './reducers/topicsReducer';\r\nimport { initChats } from './reducers/chatsReducer';\r\nimport LoginPage from './components/LoginPage';\r\nimport Users from './components/Users';\r\nimport Message from './components/Message';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './components/Home';\r\nimport Blogs from './components/Blogs';\r\nimport SingleBlog from './components/SingleBlog';\r\nimport SingleUser from './components/SingleUser';\r\nimport Topics from './components/Topics';\r\nimport { LoggedUser } from './types';\r\nimport { AppState } from './store/store';\r\n\r\nconst App = () => {\r\n    const user: LoggedUser = useSelector((state: AppState) => state.login);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            await dispatch(initUsers());\r\n            await dispatch(initBlogs());\r\n            await dispatch(initTopics());\r\n            await dispatch(initChats());\r\n            dispatch(initLoginUser());\r\n        };\r\n        fetch();\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!user &&\r\n                <Container maxWidth='md'>\r\n                    <LoginPage />\r\n                </Container>\r\n            }\r\n            {user &&\r\n                <Container maxWidth='lg' style={{marginTop: '7rem'}}>\r\n                    <Router>\r\n                        <Navbar />\r\n                        <div style={{marginTop: '5rem'}}>\r\n                            <Route exact path='/' render={() => <Home />} />\r\n                            <Route exact path='/topics' render={() => <Topics/> } />\r\n                            <Route exact path='/blogs' render={() => <Blogs /> } />\r\n                            <Route path='/blogs/:id' render={() => <SingleBlog /> } />\r\n                            <Route exact path='/users' render={() => <Users /> } />\r\n                            <Route path='/users/:id' render={() => <SingleUser/> } />\r\n                        </div>\r\n                    </Router>\r\n                </Container>\r\n            }\r\n            <Message />\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\r\nimport usersReducer from '../reducers/usersReducer';\r\nimport loginReducer from '../reducers/loginReducer';\r\nimport messageReducer from '../reducers/messageReducer';\r\nimport blogsReducer from '../reducers/blogsReducer';\r\nimport topicsReducer from '../reducers/topicsReducer';\r\nimport chatsReducer from '../reducers/chatsReducer';\r\nimport { AppActions } from './typesStore';\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    users: usersReducer,\r\n    message: messageReducer,\r\n    topics: topicsReducer,\r\n    blogs: blogsReducer,\r\n    chats: chatsReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof reducers>;\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk as ThunkMiddleware<AppState, AppActions>));\r\n\r\nexport default store;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            'Solway',\r\n            'serif'\r\n        ].join(','),\r\n        button: {\r\n            textTransform: 'none'\r\n        }\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#05386B',\r\n            light: '#EDF5E1',\r\n        },\r\n        secondary: {\r\n            main: '#5CDB95',\r\n            light: '#8EE4AF',\r\n            dark: '#379683'\r\n        },\r\n        error: {\r\n            main: '#F44336',\r\n            dark: '#D32F2F',\r\n            light: '#E57373'\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './styles/theme';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}